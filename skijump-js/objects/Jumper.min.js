function Jumper(x,y){this.w=40,this.h=80;const options={friction:.001,frictionAir:.001};this.body=Bodies.rectangle(x,y,this.w,this.h,options),World.add(world,this.body),this.footVertices=Matter.Vertices.create([{x:.5*-this.w,y:.5*this.h},{x:.5*this.w,y:.5*this.h},{x:.5*this.w,y:.5*this.h+10},{x:.5*-this.w,y:.5*this.h+10}]),this.footBounds=Matter.Bounds.create(this.footVertices),Body.setAngle(this.body,radians(40)),this.JUMP_FORCE=.1,this.TURN_FORCE=.05,this.turningDir=0,this.turningMod=0,this.wantTurn=!1,this.update=()=>{this.turningMod&&(this.wantTurn?this.turningMod=min(this.turningMod+.005,1):this.turningMod=max(this.turningMod-.01,0),this.turn())},this.draw=()=>{},this.onKeyPressed=keyCode=>{if("Space"==keyCode?this.canJump()&&this.jump():"ArrowLeft"==keyCode?(this.turningDir=-1,this.wantTurn=!0,this.turningMod=.1):"ArrowRight"==keyCode&&(this.turningDir=1,this.wantTurn=!0,this.turningMod=.1),"CapsLock"==keyCode&&(this.body.isStatic=!this.body.isStatic),this.body.isStatic){const MOVE_SPEED=10;"KeyW"==keyCode?Matter.Body.setPosition(this.body,{x:this.body.position.x,y:this.body.position.y-MOVE_SPEED}):"KeyS"==keyCode?Matter.Body.setPosition(this.body,{x:this.body.position.x,y:this.body.position.y+MOVE_SPEED}):"KeyA"==keyCode?Matter.Body.setPosition(this.body,{x:this.body.position.x-MOVE_SPEED,y:this.body.position.y}):"KeyD"==keyCode&&Matter.Body.setPosition(this.body,{x:this.body.position.x+MOVE_SPEED,y:this.body.position.y})}},this.onKeyReleased=keyCode=>{"ArrowLeft"==keyCode?this.wantTurn=!1:"ArrowRight"==keyCode&&(this.wantTurn=!1)},this.canJump=()=>Matter.Query.collides(this.body,[pad.body]).length>0,this.jump=()=>{const jumpAngle=this.body.angle;let jumpVector=Matter.Vector.create(0,-this.JUMP_FORCE);jumpVector=Matter.Vector.rotate(jumpVector,jumpAngle),Body.applyForce(this.body,this.body.position,jumpVector)},this.turn=()=>{Body.rotate(this.body,this.TURN_FORCE*this.turningMod*this.turningDir)}}
function LaunchingPad(){this.body=PadCreator.createPadBody(),World.add(world,this.body),this.img=PadCreator.padImg,this.isWaitingForLaunch=!0,this.isPullingJumper=!1,this.canJump=!1,this.pullingSystem=new PullingSystem,this.onReady=()=>{MessagesManager.waitingForLaunch()},this.update=()=>{this.isPullingJumper&&(this.pullingSystem.update()?this.setJumperVelocity():this.endOfPulling())},this.setJumperVelocity=()=>{this.pullingSystem.setNewVelocityAndAngle()},this.launch=()=>{this.isWaitingForLaunch=!1,this.isPullingJumper=!0,MessagesManager.skiingDown()},this.endOfPulling=()=>{this.isPullingJumper=!1,this.setJumperDynamic(),this.canJump=!1,MessagesManager.isFlying()},this.setJumperDynamic=()=>{jumper.letSteering(),Body.setVelocity(jumper.body,jumper.body.velocity)},this.startPullingJumper=()=>{this.isPullingJumper=!0,this.pullingSystem.friction=3*jumper.friction,this.pullingSystem.pullingArray=PAD_COLLISION_POINTS;for(let i=0;i<PAD_COLLISION_POINTS.length;i++){const point=PAD_COLLISION_POINTS[i];if(point.x>=jumper.body.position.x)return this.pullingSystem.setIndex(i),void this.setJumperRightPosition()}},this.setJumperRightPosition=()=>{const jumperRightPosition=this.getJumperRightPosition();Body.setPosition(jumper.body,jumperRightPosition)},this.getJumperRightPosition=()=>{const jumperX=jumper.body.position.x,diffX=jumperX-this.pullingSystem.p1.x,pullingPointsDiffX=this.pullingSystem.p2.x-this.pullingSystem.p1.x,pullingPointsDiffY=this.pullingSystem.p2.y-this.pullingSystem.p1.y,k=diffX/pullingPointsDiffX,nextJumperY=this.pullingSystem.p1.y+pullingPointsDiffY*k,nextJumperPos=Matter.Vector.create(jumperX,nextJumperY);return Matter.Vector.add(nextJumperPos,jumper.offsetPoint)},this.draw=()=>{push(),fill(50,50,255,128),push(),scale(PAD_SCALE),image(this.img,0,0),pop(),pop()},this.onKeyPressed=()=>{keyCode==SPACE&&this.onSpaceHit()},this.onScreenTouched=()=>{this.onSpaceHit()},this.onSpaceHit=()=>{this.canJump?(this.endOfPulling(),jumper.jump()):this.isWaitingForLaunch&&this.launch()}}
function LaunchingPad(){this.body=PadCreator.createPadBody(),print(PadCreator.pointsList),World.add(world,this.body),this.img=PadCreator.padImg,this.isPullingJumper=!0,this.canJump=!1,this.pullingSystem={p1:PAD_PULLING_POINTS[1],p2:PAD_PULLING_POINTS[2],index:2,update:()=>{if(jumper.body.position.x>=this.pullingSystem.p2.x){if(this.pullingSystem.index++,!(this.pullingSystem.index<PAD_PULLING_POINTS.length))return this.pullingSystem.index=1,this.isPullingJumper=!1,!1;this.pullingSystem.p1=this.pullingSystem.p2,this.pullingSystem.p2=PAD_PULLING_POINTS[this.pullingSystem.index]}return jumper.body.position.x>=JUMP_POINT&&(this.canJump=!0),!0},getNewVelocity:()=>{const diff_x=this.pullingSystem.p2.x-this.pullingSystem.p1.x,diff_y=this.pullingSystem.p2.y-this.pullingSystem.p1.y,alpha=Math.atan2(diff_y,diff_x),acc=Math.sin(alpha)*world.gravity.y,currVel=jumper.body.velocity,currVelMag=Matter.Vector.magnitude(currVel),velAlpha=Math.atan2(currVel.y,currVel.x),diffAlpha=velAlpha-alpha;let newVel=Matter.Vector.create(0,0);newVel.x=Math.cos(diffAlpha)*currVelMag,newVel=Matter.Vector.rotate(newVel,alpha),Body.setAngle(jumper.body,alpha);let accVec=Matter.Vector.create(acc,0);return accVec=Matter.Vector.rotate(accVec,alpha),Matter.Vector.add(newVel,accVec)}},this.update=()=>{if(this.isPullingJumper)if(this.pullingSystem.update()){const vel=this.pullingSystem.getNewVelocity();jumper.body.velocity=vel}else this.setJumperDynamic()},this.setJumperDynamic=()=>{Body.setStatic(jumper.body,!1),Body.setVelocity(jumper.body,jumper.body.velocity)},this.draw=()=>{push(),fill(50,50,255),image(this.img,0,0),this.body.parts.forEach(part=>{beginShape(),part.vertices.forEach(element=>{vertex(element.x,element.y),circle(element.x,element.y,3)}),endShape(CLOSE)}),this.onKeyPressed=keyCode=>{this.isPullingJumper&&"Space"==keyCode&&this.canJump&&(this.setJumperDynamic(),jumper.jump())},pop()}}
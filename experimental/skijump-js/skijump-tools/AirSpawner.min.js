function AirSpawner(){this.angle=Math.random()*TWO_PI,this.size=80,this.radius=100,this.force=10,this.framesCounter=0,this.nextParticleWaitFrames=2,this.airParticles=[],this.AIR_CHANGER_MOD=.08,this.update=()=>{this.angle+=(Math.random()-.5)*this.AIR_CHANGER_MOD,this.framesCounter++;for(let i=this.airParticles.length-1;i>=0;i--){let particle;this.airParticles[i].update()||this.airParticles.splice(i,1)}this.framesCounter>=this.nextParticleWaitFrames&&(this.framesCounter=0,this.spawnParticle())},this.draw=()=>{push();const jumperPos=jumper.body.position,x=Math.cos(this.angle)*this.radius+jumperPos.x,y=Math.sin(this.angle)*this.radius+jumperPos.y;fill(255,128,0),translate(x,y),rotate(this.angle),rect(0,0,15,this.size),circle(0,0,20),pop(),this.airParticles.forEach(element=>{element.draw()})},this.spawnParticle=()=>{const jumperPos=jumper.body.position,diffX=Math.sin(-this.angle)*this.size,diffY=Math.cos(-this.angle)*this.size,offset=Math.random()-.5,offsetX=offset*diffX,offsetY=offset*diffY,spawnX=Math.cos(this.angle)*this.radius+jumperPos.x+offsetX,spawnY=Math.sin(this.angle)*this.radius+jumperPos.y+offsetY,velocity=this.getNextParticleVelocity(),particle=new AirParticle(spawnX,spawnY,velocity);this.airParticles[this.airParticles.length]=particle},this.getNextParticleVelocity=()=>{const velX=Math.cos(this.angle+PI)*this.force,velY=Math.sin(this.angle+PI)*this.force;return Matter.Vector.create(velX,velY)}}
SJ.Screen=class{constructor(setup,draw){this._drawable=[],this._buttons=[],this.draw=draw||this.draw,this.setBackgroundColor(color(10,10,50)),setup(this)}setBackgroundColor(bgColor){this.backgroundColor=bgColor}draw(){push(),background(this.backgroundColor);for(let i=this._drawable.length-1;i>=0;i--){const obj=this._drawable[i];!1!==obj.isVisible&&obj.draw()}pop()}onMouseMove(){for(let i=0;i<this._drawable.length;i++){const obj=this._drawable[i];if(obj.canStopMouse&&(!0!==obj.disabled&&!1!==obj.isVisible))if(this.isMouseInBtn(obj)){if(!obj.isMouseIn)return obj.isMouseIn=!0,obj.onMouseEnter(),!0}else if(obj.isMouseIn)return obj.isMouseIn=!1,obj.onMouseLeave(),!0}return!1}onMousePress(){for(let i=0;i<this._drawable.length;i++){const obj=this._drawable[i];if(obj.canStopMouse&&(!0!==obj.disabled&&!1!==obj.isVisible&&this.isMouseInBtn(obj)))return obj.isPress=!0,obj.onMousePress(),!0}return!1}onMouseRelease(){for(let i=0;i<this._drawable.length;i++){const obj=this._drawable[i];if(obj.canStopMouse&&(!0!==obj.disabled&&!1!==obj.isVisible&&obj.isPress&&(obj.isPress=!1,this.isMouseInBtn(obj))))return obj.onMouseRelease(),!0}return!1}isMouseInBtn(btn){return this.isMouseInRect(btn.x,btn.y,btn.w,btn.h)}isMouseInRect(x,y,w,h){return SJ.mouseScreenX>=x&&SJ.mouseScreenX<x+w&&SJ.mouseScreenY>=y&&SJ.mouseScreenY<y+h}appendDrawable(obj){this._drawable.push(obj)}appendButton(btn){this._buttons.unshift(btn),this.appendDrawable(btn)}};
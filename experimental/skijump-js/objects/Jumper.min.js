function Jumper(x,y){this.w=10,this.h=20,this.friction=.005;const options={friction:0,frictionAir:.005,density:1,isStatic:!0,parts:[Bodies.rectangle(x,y,this.w,this.h),Bodies.rectangle(x+5,y+.5*this.h+3,this.w+15,5),Bodies.circle(x-.5*this.w-5,y+.5*this.h+2.5,3),Bodies.circle(x+.5*this.w+12,y+.5*this.h+2.5,3)]};this.body=Body.create(options),World.add(world,this.body),Body.setAngle(this.body,radians(40)),this.JUMP_FORCE=.003,this.TURN_FORCE=.2,this.canSteer=!1,this.isSlowingDown=!1,this.SLOWING_MOD=.995,this.turningDir=0,this.turningMod=0,this.wantTurn=!1,this.offsetPoint=Matter.Vector.create(0,-10),this.offsetAngle=0,this.update=()=>{this.body.isStatic&&(this.isSlowingDown&&(this.body.velocity.x*=this.SLOWING_MOD,this.body.velocity.y*=this.SLOWING_MOD),Matter.Body.translate(this.body,this.body.velocity)),this.canSteer&&(Matter.Query.collides(this.body,[pad.body]).length>0?this.onPadHit():this.turningMod&&(this.wantTurn?this.turningMod=min(this.turningMod+.005,1):this.turningMod=max(this.turningMod-.01,0),this.turn()))},this.onPadHit=()=>{Matter.Body.setStatic(this.body,!0),this.canSteer=!1,scoreCounter.calculateDistance(this.body.position.x),ui.updateScoreLabel(scoreCounter.score),pad.startPullingJumper(),ui.updateMessageLabel(""),this.checkIfFail()},this.checkIfFail=()=>{const angle=this.body.angle,padAngle=this.getPadAngle(),diffAngle=angle-padAngle;Math.abs(diffAngle)>=radians(20)&&(this.offsetAngle=diffAngle<0?-HALF_PI:HALF_PI)},this.getPadAngle=()=>{const diffX=pad.pullingSystem.p2.x-pad.pullingSystem.p1.x,diffY=pad.pullingSystem.p2.y-pad.pullingSystem.p1.y,padAngle=Math.atan2(diffY,diffX);return padAngle},this.draw=()=>{const pos=this.body.position,angle=this.body.angle;push(),translate(pos.x,pos.y),rotate(angle),rect(0,0,this.w,this.h),pop(),this.body.parts.forEach(part=>{beginShape(),part.vertices.forEach(element=>{vertex(element.x,element.y)}),endShape(CLOSE)})},this.onKeyPressed=keyCode=>{"Space"==keyCode||("ArrowLeft"==keyCode?(this.turningDir=-1,this.wantTurn=!0,this.turningMod=.1):"ArrowRight"==keyCode&&(this.turningDir=1,this.wantTurn=!0,this.turningMod=.1))},this.onKeyReleased=keyCode=>{"ArrowLeft"==keyCode?this.wantTurn=!1:"ArrowRight"==keyCode&&(this.wantTurn=!1)},this.jump=()=>{const jumpAngle=this.body.angle;let jumpVector=Matter.Vector.create(0,-this.JUMP_FORCE);jumpVector=Matter.Vector.rotate(jumpVector,jumpAngle),Body.applyForce(this.body,this.body.position,jumpVector)},this.letSteering=()=>{Matter.Body.setStatic(this.body,!1),this.canSteer=!0},this.turn=()=>{Body.rotate(this.body,this.TURN_FORCE*this.turningMod*this.turningDir)}}
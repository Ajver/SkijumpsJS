SJ.Camera=class{constructor(scaleMod){this._offset=createVector(-200,0),this._offset.x+=.5*SJ.SCREEN_WIDTH,this._offset.y+=.5*SJ.SCREEN_HEIGHT,this._scale=scaleMod,this._currentPosition=createVector(0,0),this._targetPosition=createVector(0,0),this._path=SJ.V.cameraPath,this.restart()}restart(){const jumperPos=SJ.jumper.body.position;this._currentPosition=createVector(jumperPos.x,jumperPos.y),this._targetPosition=createVector(jumperPos.x,jumperPos.y),this._setPathIndex()}_setPathIndex(){for(let i=1;i<this._path.length;i++)if(this._currentPosition.x<this._path[i].x){this._pathIndex=i-1;break}}update(){const jumperX=SJ.jumper.body.position.x;jumperX>=this._path[this._pathIndex+1].x&&this._pathIndex<this._path.length-2&&this._pathIndex++;const p1=this._path[this._pathIndex],p2=this._path[this._pathIndex+1],diffX=jumperX-p1.x,distX=p2.x-p1.x,distY=p2.y-p1.y,k=diffX/distX;this._targetPosition.x=jumperX,this._targetPosition.y=p1.y+k*distY;const LERP_SPEED=.1;this._currentPosition.x=lerp(this._currentPosition.x,this._targetPosition.x,.1),this._currentPosition.y=lerp(this._currentPosition.y,this._targetPosition.y,.1)}transform(){const pos=this.getPosition();scale(this._scale),translate(pos.x,pos.y)}getPosition(){const curPos=this._currentPosition;return{x:-curPos.x+this._offset.x/this._scale,y:-curPos.y+this._offset.y/this._scale}}drawPath(){push(),strokeWeight(20),fill(200,0,0),noStroke();const p=this._path[0];circle(p.x,p.y,40);for(let i=1;i<this._path.length;i++){const p1=this._path[i-1],p2=this._path[i];stroke(0,0,255),line(p1.x,p1.y,p2.x,p2.y),noStroke(),circle(p2.x,p2.y,40)}pop()}};
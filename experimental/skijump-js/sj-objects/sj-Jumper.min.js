SJ.Jumper=class{constructor(x,y){this._w=10,this._h=20;const options={friction:0,frictionAir:SJ.V.jumperAirFriction,density:1,isStatic:!0,parts:[Matter.Bodies.rectangle(x,y,this._w,this._h),Matter.Bodies.rectangle(x+5,y+.5*this._h+3,this._w+15,5),Matter.Bodies.circle(x-.5*this._w-5,y+.5*this._h+2.5,3),Matter.Bodies.circle(x+.5*this._w+12,y+.5*this._h+2.5,3)]};this.body=Matter.Body.create(options),Matter.World.add(SJ.world,this.body),Matter.Body.setAngle(this.body,radians(40)),this.TURN_FORCE=.2,this.canSteer=!1,this.isSlowingDown=!1,this.SLOWING_MOD=.995,this.turningDir=0,this.turningMod=0,this.wantTurn=!1,this.offsetPoint=Matter.Vector.create(0,-10),this.offsetAngle=0}update(){this.body.isStatic&&(this.isSlowingDown&&(this.body.velocity.x*=this.SLOWING_MOD,this.body.velocity.y*=this.SLOWING_MOD),Matter.Body.translate(this.body,this.body.velocity)),this.canSteer&&(Matter.Query.collides(this.body,[SJ.pad.body]).length>0?this.onPadHit():this.turningMod&&(this.wantTurn?this.turningMod=min(this.turningMod+.02,.5):this.turningMod=max(this.turningMod-.01,0),this.turn()))}onPadHit(){Matter.Body.setStatic(this.body,!0),this.canSteer=!1,SJ.scoreCounter.calculateDistance(this.body.position.x),SJ.ui.updateScoreLabel(SJ.scoreCounter.score),SJ.pad.startPullingJumper(),this.checkIfFail()}checkIfFail(){const angle=this.body.angle,padAngle=this.getPadAngle(),diffAngle=angle-padAngle;abs(diffAngle)>=radians(20)?(this.offsetAngle=diffAngle<0?-HALF_PI:HALF_PI,SJ.MessagesManager.fail()):SJ.MessagesManager.noFail()}getPadAngle(){const diffX=SJ.pad._pullingSystem.p2.x-SJ.pad._pullingSystem.p1.x,diffY=SJ.pad._pullingSystem.p2.y-SJ.pad._pullingSystem.p1.y,padAngle=atan2(diffY,diffX);return padAngle}draw(){const pos=this.body.position,angle=this.body.angle;push(),translate(pos.x,pos.y),rotate(angle),fill(255),rect(0,0,this._w,this._h),pop(),this.body.parts.forEach(part=>{beginShape(),part.vertices.forEach(element=>{vertex(element.x,element.y)}),endShape(CLOSE)})}_drawVelocityVector(){push(),translate(pos.x,pos.y),scale(3),line(0,0,this.body.velocity.x,this.body.velocity.y),pop()}onKeyPressed(){keyCode==LEFT_ARROW?this.wantTurnTo(-1):keyCode==RIGHT_ARROW&&this.wantTurnTo(1)}onKeyReleased(){keyCode!=LEFT_ARROW&&keyCode!=RIGHT_ARROW||(this.wantTurn=!1)}onScreenTouched(){this.setTurnDirByTouch()}onScreenTouchMoved(){this.setTurnDirByTouch()}setTurnDirByTouch(){SJ.mouseScreenX<.5*SJ.SCREEN_WIDTH?this.wantTurnTo(-1):this.wantTurnTo(1)}onScreenTouchEnded(){this.wantTurn=!1}wantTurnTo(dir){this.turningDir=dir,this.wantTurn=!0,this.turningMod=.1}jump(){this.setAngle(this.body.angle);const jumpAngle=this.body.angle;let jumpVector=Matter.Vector.create(0,-SJ.V.jumperJumpForce);jumpVector=Matter.Vector.rotate(jumpVector,jumpAngle);const newVelocity=Matter.Vector.add(this.body.velocity,jumpVector);Matter.Body.setVelocity(this.body,newVelocity)}letSteering(){Matter.Body.setStatic(this.body,!1),this.canSteer=!0}turn(){let deltaAngle=this.TURN_FORCE*this.turningMod*this.turningDir,angle=this.body.angle+deltaAngle;this.setAngle(angle)}setAngle(angle){for(;angle<-PI;)angle+=TWO_PI;for(;angle>PI;)angle-=TWO_PI;Matter.Body.setAngle(this.body,angle)}};
SJ.LaunchingPad=class{constructor(){this.body=SJ.PadCreator.createPadBody(),Matter.World.add(SJ.world,this.body),this._img=SJ.PadCreator.padImg,this._isWaitingForLaunch=!0,this._isPullingJumper=!1,this._canJump=!1,this._pullingSystem=new SJ.PullingSystem}onReady(){SJ.MessagesManager.waitingForLaunch()}update(){this._isPullingJumper&&(this._pullingSystem.update()?this.setJumperVelocity():this.endOfPulling())}setJumperVelocity(){this._pullingSystem.setNewVelocityAndAngle()}launch(){this._isWaitingForLaunch=!1,this._isPullingJumper=!0,SJ.MessagesManager.skiingDown()}endOfPulling(){this._isPullingJumper=!1,this.setJumperDynamic(),this._canJump=!1,SJ.MessagesManager.isFlying()}setJumperDynamic(){SJ.jumper.letSteering(),Matter.Body.setVelocity(SJ.jumper.body,SJ.jumper.body.velocity)}startPullingJumper(){this._isPullingJumper=!0,this._pullingSystem.friction=3*SJ.V.jumperFriction,this._pullingSystem.pullingArray=PAD_COLLISION_POINTS;for(let i=0;i<PAD_COLLISION_POINTS.length;i++){const point=PAD_COLLISION_POINTS[i];if(point.x>=SJ.jumper.body.position.x)return this._pullingSystem.setIndex(i),void this.setJumperRightPosition()}}setJumperRightPosition(){const jumperRightPosition=this.getJumperRightPosition();Matter.Body.setPosition(SJ.jumper.body,jumperRightPosition)}getJumperRightPosition(){const jumperX=SJ.jumper.body.position.x,diffX=jumperX-this._pullingSystem.p1.x,pullingPointsDiffX=this._pullingSystem.p2.x-this._pullingSystem.p1.x,pullingPointsDiffY=this._pullingSystem.p2.y-this._pullingSystem.p1.y,k=diffX/pullingPointsDiffX,nextJumperY=this._pullingSystem.p1.y+pullingPointsDiffY*k,nextJumperPos=Matter.Vector.create(jumperX,nextJumperY);return Matter.Vector.add(nextJumperPos,SJ.jumper.offsetPoint)}draw(){push(),stroke(0),strokeWeight(4),fill(50,50,255,64),push(),scale(PAD_SCALE),image(this._img,0,0),pop(),this.body.parts.forEach(part=>{beginShape(),part.vertices.forEach(element=>{vertex(element.x,element.y)}),endShape()}),pop()}onKeyPressed(){keyCode==SPACE&&this.onSpaceHit()}onScreenTouched(){this.onSpaceHit()}onSpaceHit(){this._canJump?(this.endOfPulling(),SJ.jumper.jump()):this._isWaitingForLaunch&&this.launch()}};